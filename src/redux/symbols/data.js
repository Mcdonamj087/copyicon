const symbols = [
  {
    id: 'popular',
    category: 'Popular',
    icons: [],
  },
  {
    id: 'arrows',
    category: 'Arrows',
    icons: [
      {
        name: 'Leftwards Arrow',
        formats: {
          html: '&#8592;',
          entity: '&larr;',
          css: '\\2190',
          hex: 'U+2190',
          ascii: '8592',
        },
      },
      {
        name: 'Upwards Arrow',
        formats: {
          html: '&#8593;',
          entity: '&uarr;',
          css: '\\2191',
          hex: 'U+2191',
          ascii: '8593',
        },
      },
      {
        name: 'Rightwards Arrow',
        formats: {
          html: '&#8594;',
          entity: '&rarr;',
          css: '\\2192',
          hex: 'U+2192',
          ascii: '8594',
        },
      },
      {
        name: 'Left Right Arrow',
        formats: {
          html: '&#8596;',
          entity: '&harr;',
          css: '\\2194',
          hex: 'U+2194',
          ascii: '8596',
        },
      },
      {
        name: 'Up Down Arrow',
        formats: {
          html: '&#8597;',
          css: '\\2195',
          hex: 'U+2195',
          ascii: '8597',
        },
      },
    ],
  },
  {
    id: 'currency',
    category: 'Currency',
    icons: [
      {
        name: 'Euro-Currency Sign',
        keywords: [],
        formats: {
          html: '&#8352;',
          css: '\\20A0',
          hex: 'U+20A0',
          ascii: '8352',
        },
      },
      {
        name: 'Colon Sign',
        formats: {
          html: '&#8353',
          css: '\\20A1',
          hex: 'U+20A1',
          ascii: '8353',
        },
      },
      {
        name: 'Cruzeiro Sign',
        formats: {
          html: '&#8354',
          css: '\\20A2',
          hex: 'U+20A2',
          ascii: '8354',
        },
      },
      {
        name: 'French Franc Sign',
        formats: {
          html: '&#8355',
          css: '\\20A3',
          hex: 'U+20A3',
          ascii: '8355',
        },
      },
      {
        name: 'Lira Sign',
        formats: {
          html: '&#8356',
          css: '\\20A4',
          hex: 'U+20A4',
          ascii: '8356',
        },
      },
      {
        name: 'Mill Sign',
        formats: {
          html: '&#8357',
          css: '\\20A5',
          hex: 'U+20A5',
          ascii: '8357',
        },
      },
      {
        name: 'Naira Sign',
        formats: {
          html: '&#8358',
          css: '\\20A6',
          hex: 'U+20A6',
          ascii: '8358',
        },
      },
      {
        name: 'Peseta Sign',
        formats: {
          html: '&#8359',
          css: '\\20A7',
          hex: 'U+20A7',
          ascii: '8359',
        },
      },
      // {
      //   name: 'Rupee Sign',
      // },
      // {
      //   name: 'Won Sign',
      // },
      // {
      //   name: 'New Sheqel Sign',
      // },
      // {
      //   name: 'Dong Sign',
      // },
      // {
      //   name: 'Euro Sign',
      // },
      // {
      //   name: 'Kip Sign',
      // },
      // {
      //   name: 'Tugrik Sign',
      // },
      // {
      //   name: 'Drachma Sign',
      // },
      // {
      //   name: 'German Penny Symbol',
      // },
      // {
      //   name: 'Peso Sign',
      // },
      // {
      //   name: 'Guarani Sign',
      // },
      // {
      //   name: 'Austral Sign',
      // },
      // {
      //   name: 'Hryvnia Sign',
      // },
      // {
      //   name: 'Cedi Sign',
      // },
      // {
      //   name: 'Livre Tournois Sign',
      // },
      // {
      //   name: 'Spesmilo Sign',
      // },
      // {
      //   name: 'Tenge Sign',
      // },
      // {
      //   name: 'Indian Rupee Sign',
      // },
      // {
      //   name: 'Turkish Lira Sign',
      // },
      // {
      //   name: 'Nordic Mark Sign',
      // },
      // {
      //   name: 'Manat Sign',
      // },
      // {
      //   name: 'Ruble Sign',
      // },
      // {
      //   name: 'Lari Sign',
      // },
      // {
      //   name: 'Bitcoin Sign',
      // },
      // {
      //   name: 'Bengali Rupee Mark',
      // },
      // {
      //   name: 'Gujarati Rupee Sign',
      // },
      // {
      //   name: 'Tamil Rupee Sign',
      // },
      // {
      //   name: 'Thai Currency Symbol Baht',
      // },
      // {
      //   name: 'Khmer Currency Symbol Riel',
      // },
      // {
      //   name: 'Square Yuan',
      // },
      // {
      //   name: 'Yen Character',
      // },
      // {
      //   name: 'Yen/Yuan Character Variant One',
      // },
      // {
      //   name: 'Yen/Yuan Character Variant Two',
      // },
      // {
      //   name: 'Yuan Character, in Hong Kong and Taiwan',
      // },
      // {
      //   name: 'Yen/Yuan Character Variant Three',
      // },
      // {
      //   name: 'Won Character',
      // },
      // {
      //   name: 'Rial Sign',
      // },
      {
        name: 'Dollar Sign',
        keywords: ['money'],
        formats: {
          html: '&#36;',
          css: '\\0024',
          hex: 'U+0024',
          ascii: '0036',
        },
      },
      {
        name: 'Fullwidth Dollar Sign',
        keywords: ['money'],
        formats: {
          html: '&#36;',
          css: '\\0024',
          hex: 'U+0024',
          ascii: '0036',
        },
      },
      // {
      //   name: 'Fullwidth Cent Sign',
      // },
      // {
      //   name: 'Fullwidth Pound Sign',
      // },
      // {
      //   name: 'Fullwidth Yen Sign',
      // },
      // {
      //   name: 'Fullwidth Won Sign',
      // },
      // {
      //   name: 'Cent Sign',
      // },
    ],
  },
  {
    id: 'emoji',
    category: 'Emoji',
    icons: [],
  },
  {
    id: 'math',
    category: 'Math',
    icons: [
      {
        name: 'For All',
        keywords: [],
        formats: {
          html: '&#8704;',
          entity: '&forall;',
          css: '\\2200',
          hex: 'U+2200',
          ascii: '8704',
        },
      },
      {
        name: 'Complement',
        keywords: [],
        formats: {
          html: '&#8705;',
          css: '\\2201',
          hex: 'U+2201',
          ascii: '8705',
        },
      },
      {
        name: 'Partial Differential',
        keywords: [],
        formats: {
          html: '&#8706;',
          entity: '&part;',
          css: '\\2202',
          hex: 'U+2202',
          ascii: '8706',
        },
      },
      {
        name: 'There Exists',
        keywords: ['existential', 'quantifier'],
        formats: {
          html: '&#8707;',
          entity: '&exist;',
          css: '\\2203',
          hex: 'U+2203',
          ascii: '8707',
        },
      },
      {
        name: 'There Does Not Exists',
        keywords: [],
        formats: {
          html: '&#8708;',
          entity: '',
          css: '\\2204',
          hex: 'U+2204',
          ascii: '8708',
        },
      },
      {
        name: 'Empty Set',
        keywords: ['null', 'set', 'zero'],
        formats: {
          html: '&#8709;',
          entity: '&empty;',
          css: '\\2205',
          hex: 'U+2205',
          ascii: '8709',
        },
      },
      {
        name: 'Increment',
        keywords: [
          'laplace operator',
          'forward difference',
          'symmetric sifference',
          'delta',
          'triangle',
          'up pointing',
        ],
        formats: {
          html: '&#8710;',
          entity: '',
          css: '\\2206',
          hex: 'U+2206',
          ascii: '8710',
        },
      },
      {
        name: 'Nabla',
        keywords: [
          'backward difference',
          'gradient, del',
          'triangle',
          'down pointing',
        ],
        formats: {
          html: '&#8711;',
          entity: '&nabla;',
          css: '\\2207',
          hex: 'U+2207',
          ascii: '8711',
        },
      },
      {
        name: 'Element Of',
        keywords: [],
        formats: {
          html: '&#8712;',
          entity: '&isin;',
          css: '\\2208',
          hex: 'U+2208',
          ascii: '8712',
        },
      },
      {
        name: 'Not An Element Of',
        keywords: [],
        formats: {
          html: '&#8713;',
          entity: '&notin;',
          css: '\\2209',
          hex: 'U+2209',
          ascii: '8713',
        },
      },
      {
        name: 'Small Element Of',
        keywords: ['epsilon'],
        formats: {
          html: '&#8714;',
          entity: '',
          css: '\\220A',
          hex: 'U+220A',
          ascii: '8714',
        },
      },
      {
        name: 'Contains As Member',
        keywords: ['such that'],
        formats: {
          html: '&#8715;',
          entity: '&ni;',
          css: '\\220B',
          hex: 'U+220B',
          ascii: '8715',
        },
      },
      {
        name: 'Does Not Contain As Member',
        keywords: [],
        formats: {
          html: '&#8716;',
          entity: '',
          css: '\\220C',
          hex: 'U+220C',
          ascii: '8716',
        },
      },
      {
        name: 'Small Contain As Member',
        keywords: ['reversed epsilon'],
        formats: {
          html: '&#8717;',
          entity: '',
          css: '\\220D',
          hex: 'U+220D',
          ascii: '8717',
        },
      },
      {
        name: 'End Of Proof',
        keywords: ['q.e.d', 'bullet', 'square', 'vertical', 'rectangle'],
        formats: {
          html: '&#8718;',
          entity: '',
          css: '\\220E',
          hex: 'U+220E',
          ascii: '8718',
        },
      },
      {
        name: 'N-Ary Product',
        keywords: ['product sign', 'pi'],
        formats: {
          html: '&#8719;',
          entity: '&prod;',
          css: '\\220F',
          hex: 'U+220F',
          ascii: '8719',
        },
      },
      {
        name: 'N-Ary Coproduct',
        keywords: ['coproduct sign'],
        formats: {
          html: '&#8720;',
          entity: '',
          css: '\\2210',
          hex: 'U+2210',
          ascii: '8720',
        },
      },
      {
        name: 'N-Ary Summation',
        keywords: ['summation sign', 'sigma', 'double-struck'],
        formats: {
          html: '&#8721;',
          entity: '&sum;',
          css: '\\2211',
          hex: 'U+2211',
          ascii: '8721',
        },
      },
      {
        name: 'Minus Sign',
        keywords: ['hyphen', 'dash'],
        formats: {
          html: '&#8722;',
          entity: '&minus;',
          css: '\\2212',
          hex: 'U+2212',
          ascii: '8722',
        },
      },
      {
        name: 'Minus-Or-Plus Sign',
        keywords: ['plus', 'minus'],
        formats: {
          html: '&#8723;',
          entity: '',
          css: '\\2213',
          hex: 'U+2213',
          ascii: '8723',
        },
      },
      {
        name: 'Dot Plus',
        keywords: [],
        formats: {
          html: '&#8724;',
          entity: '',
          css: '\\2214',
          hex: 'U+2214',
          ascii: '8724',
        },
      },
      {
        name: 'Division Slash',
        keywords: ['solidus', 'fraction', 'mathematical rising diagonal'],
        formats: {
          html: '&#8725;',
          entity: '',
          css: '\\2215',
          hex: 'U+2215',
          ascii: '8725',
        },
      },
      {
        name: 'Set Minus',
        keywords: ['reverse solidus', 'mathematical falling diagonal'],
        formats: {
          html: '&#8726;',
          entity: '',
          css: '\\2216',
          hex: 'U+2216',
          ascii: '8726',
        },
      },
      {
        name: 'Asterisk Operator',
        keywords: ['star', 'multiplication'],
        formats: {
          html: '&#8727;',
          entity: '&lowast;',
          css: '\\2217',
          hex: 'U+2217',
          ascii: '8727',
        },
      },
      {
        name: 'Ring Operator',
        keywords: ['apl jot', 'composite function', 'degree sign', 'bullet'],
        formats: {
          html: '&#8728;',
          entity: '',
          css: '\\2218',
          hex: 'U+2218',
          ascii: '8728',
        },
      },
      {
        name: 'Bullet Operator',
        keywords: ['dot', 'one dot leader'],
        formats: {
          html: '&#8729;',
          entity: '',
          css: '\\2219',
          hex: 'U+2219',
          ascii: '8729',
        },
      },
      {
        name: 'Square Root',
        keywords: ['radical sign', 'check mark'],
        formats: {
          html: '&#8730;',
          entity: '',
          css: '\\221A',
          hex: 'U+221A',
          ascii: '8730',
        },
      },
      {
        name: 'Cube Root',
        keywords: ['check mark'],
        formats: {
          html: '&#8731;',
          entity: '',
          css: '\\221B',
          hex: 'U+221B',
          ascii: '8731',
        },
      },
      {
        name: 'Fourth Root',
        keywords: ['check mark'],
        formats: {
          html: '&#8732;',
          entity: '',
          css: '\\221C',
          hex: 'U+221C',
          ascii: '8732',
        },
      },
      {
        name: 'Proportional To',
        keywords: [],
        formats: {
          html: '&#8733;',
          entity: '&prop;',
          css: '\\221D',
          hex: 'U+221D',
          ascii: '8733',
        },
      },
      {
        name: 'Infinity',
        keywords: [],
        formats: {
          html: '&#8734;',
          entity: '&infin;',
          css: '\\221E',
          hex: 'U+221E',
          ascii: '8734',
        },
      },
      {
        name: 'Right Angle',
        keywords: [],
        formats: {
          html: '&#8735;',
          entity: '',
          css: '\\221F',
          hex: 'U+221F',
          ascii: '8735',
        },
      },
      {
        name: 'Angle',
        keywords: ['acute'],
        formats: {
          html: '&#8736;',
          entity: '&ang;',
          css: '\\2220',
          hex: 'U+2220',
          ascii: '8736',
        },
      },
      {
        name: 'Measured Angle',
        keywords: [],
        formats: {
          html: '&#8737;',
          entity: '',
          css: '\\2221',
          hex: 'U+2221',
          ascii: '8737',
        },
      },
      {
        name: 'Spherical Angle',
        keywords: ['angle', 'arc'],
        formats: {
          html: '&#8738;',
          entity: '',
          css: '\\2222',
          hex: 'U+2222',
          ascii: '8738',
        },
      },
      {
        name: 'Divides',
        keywords: ['such that', 'APL', 'stile', 'line', 'vertical'],
        formats: {
          html: '&#8739;',
          entity: '',
          css: '\\2223',
          hex: 'U+2223',
          ascii: '8739',
        },
      },
      {
        name: 'Does Not Divide',
        keywords: [],
        formats: {
          html: '&#8740;',
          entity: '',
          css: '\\2224',
          hex: 'U+2224',
          ascii: '8740',
        },
      },
      {
        name: 'Parallel To',
        keywords: ['latin letter lateral click', 'double vertical line'],
        formats: {
          html: '&#8741;',
          entity: '',
          css: '\\2225',
          hex: 'U+2225',
          ascii: '8741',
        },
      },
      {
        name: 'Not Parallel To',
        keywords: [],
        formats: {
          html: '&#8742;',
          entity: '',
          css: '\\2226',
          hex: 'U+2226',
          ascii: '8742',
        },
      },
      {
        name: 'Logical And',
        keywords: ['wedge', 'conjunction', 'n-ary logical and', 'up arrowhead'],
        formats: {
          html: '&#8743;',
          entity: '&and;',
          css: '\\2227',
          hex: 'U+2227',
          ascii: '8743',
        },
      },
      {
        name: 'Logical Or',
        keywords: ['vee', 'disjunction', 'n-ary logical or', 'down arrowhead'],
        formats: {
          html: '&#8744;',
          entity: '&or;',
          css: '\\2228',
          hex: 'U+2228',
          ascii: '8744',
        },
      },
      {
        name: 'Intersection',
        keywords: ['cap', 'hat', 'n-ary intersection'],
        formats: {
          html: '&#8745;',
          entity: '&cap;',
          css: '\\2229',
          hex: 'U+2229',
          ascii: '8745',
        },
      },
      {
        name: 'Union',
        keywords: ['cup', 'n-ary union'],
        formats: {
          html: '&#8746;',
          entity: '&cup;',
          css: '\\222A',
          hex: 'U+222A',
          ascii: '8746',
        },
      },
      {
        name: 'Integral',
        keywords: ['latin small letter esh'],
        formats: {
          html: '&#8747;',
          entity: '&int;',
          css: '\\222B',
          hex: 'U+222B',
          ascii: '8747',
        },
      },
      {
        name: 'Double Integral',
        keywords: [],
        formats: {
          html: '&#8748;',
          entity: '',
          css: '\\222C',
          hex: 'U+222C',
          ascii: '8748',
        },
      },
      {
        name: 'Triple Integral',
        keywords: [],
        formats: {
          html: '&#8749;',
          entity: '',
          css: '\\222D',
          hex: 'U+222D',
          ascii: '8749',
        },
      },
      {
        name: 'Contour Integral',
        keywords: [],
        formats: {
          html: '&#8750;',
          entity: '',
          css: '\\222E',
          hex: 'U+222E',
          ascii: '8750',
        },
      },
      {
        name: 'Surface Integral',
        keywords: [],
        formats: {
          html: '&#8751;',
          entity: '',
          css: '\\222F',
          hex: 'U+222F',
          ascii: '8751',
        },
      },
      {
        name: 'Volume Integral',
        keywords: [],
        formats: {
          html: '&#8752;',
          entity: '',
          css: '\\2230',
          hex: 'U+2230',
          ascii: '8752',
        },
      },
      {
        name: 'Clockwise Integral',
        keywords: [],
        formats: {
          html: '&#8753;',
          entity: '',
          css: '\\2231',
          hex: 'U+2231',
          ascii: '8753',
        },
      },
      {
        name: 'Clockwise Contour Integral',
        keywords: [],
        formats: {
          html: '&#8754;',
          entity: '',
          css: '\\2232',
          hex: 'U+2232',
          ascii: '8754',
        },
      },
      {
        name: 'Anticlockwise Contour Integral',
        keywords: [],
        formats: {
          html: '&#8755;',
          entity: '',
          css: '\\2233',
          hex: 'U+2233',
          ascii: '8755',
        },
      },
      {
        name: 'Therefore',
        keywords: ['three dots', '3'],
        formats: {
          html: '&#8756;',
          entity: '&there4;',
          css: '\\2234',
          hex: 'U+2234',
          ascii: '8756',
        },
      },
      {
        name: 'Because',
        keywords: ['three dots', '3'],
        formats: {
          html: '&#8757;',
          entity: '',
          css: '\\2235',
          hex: 'U+2235',
          ascii: '8757',
        },
      },
      {
        name: 'Ratio',
        keywords: ['colon', 'two dots', '2'],
        formats: {
          html: '&#8758;',
          entity: '',
          css: '\\2236',
          hex: 'U+2236',
          ascii: '8758',
        },
      },
      {
        name: 'Proportion',
        keywords: [],
        formats: {
          html: '&#8759;',
          entity: '',
          css: '\\2237',
          hex: 'U+2237',
          ascii: '8759',
        },
      },
      {
        name: 'Dot Minus',
        keywords: ['saturating subtraction'],
        formats: {
          html: '&#8760;',
          entity: '',
          css: '\\2238',
          hex: 'U+2238',
          ascii: '8760',
        },
      },
      {
        name: 'Excess',
        keywords: [],
        formats: {
          html: '&#8761;',
          entity: '',
          css: '\\2239',
          hex: 'U+2239',
          ascii: '8761',
        },
      },
      {
        name: 'Geometric Proportion',
        keywords: [],
        formats: {
          html: '&#8762;',
          entity: '',
          css: '\\223A',
          hex: 'U+223A',
          ascii: '8762',
        },
      },
      {
        name: 'Homothetic',
        keywords: [],
        formats: {
          html: '&#8763;',
          entity: '',
          css: '\\223B',
          hex: 'U+223B',
          ascii: '8763',
        },
      },
      {
        name: 'Tilde Operator',
        keywords: [
          'varies',
          'difference between',
          'similar to',
          'not',
          'cycle',
          'APL tilde',
        ],
        formats: {
          html: '&#8764;',
          entity: '&sim;',
          css: '\\223C',
          hex: 'U+223C',
          ascii: '8764',
        },
      },
      {
        name: 'Reversed Tilde',
        keywords: ['lazy S'],
        formats: {
          html: '&#8765;',
          entity: '',
          css: '\\223D',
          hex: 'U+223D',
          ascii: '8765',
        },
      },
      {
        name: 'Inverted Lazy S',
        keywords: ['most positive'],
        formats: {
          html: '&#8766;',
          entity: '',
          css: '\\223E',
          hex: 'U+223E',
          ascii: '8766',
        },
      },
      {
        name: 'Sine Wave',
        keywords: ['alternating current'],
        formats: {
          html: '&#8767;',
          entity: '',
          css: '\\223F',
          hex: 'U+223F',
          ascii: '8767',
        },
      },
      {
        name: 'Wreath Product',
        keywords: [],
        formats: {
          html: '&#8768;',
          entity: '',
          css: '\\2240',
          hex: 'U+2240',
          ascii: '8768',
        },
      },
      {
        name: 'Not Tilde',
        keywords: [],
        formats: {
          html: '&#8769;',
          entity: '',
          css: '\\2241',
          hex: 'U+2241',
          ascii: '8769',
        },
      },
      {
        name: 'Minus Tilde',
        keywords: [],
        formats: {
          html: '&#8770;',
          entity: '',
          css: '\\2242',
          hex: 'U+2242',
          ascii: '8770',
        },
      },
      {
        name: 'Asymptotically Equal To',
        keywords: [],
        formats: {
          html: '&#8771;',
          entity: '',
          css: '\\2243',
          hex: 'U+2243',
          ascii: '8771',
        },
      },
      {
        name: 'Not Asymptotically Equal To',
        keywords: [],
        formats: {
          html: '&#8772;',
          entity: '',
          css: '\\2244',
          hex: 'U+2244',
          ascii: '8772',
        },
      },
      {
        name: 'Approximately Equal To',
        keywords: [],
        formats: {
          html: '&#8773;',
          entity: '',
          css: '\\2245',
          hex: 'U+2245',
          ascii: '8773',
        },
      },
      {
        name: 'Approximately But Not Actually Equal To',
        keywords: [],
        formats: {
          html: '&#8774;',
          entity: '',
          css: '\\2246',
          hex: 'U+2246',
          ascii: '8774',
        },
      },
      {
        name: 'Neither Approximately Nor Actually Equal To',
        keywords: [],
        formats: {
          html: '&#8775;',
          entity: '',
          css: '\\2247',
          hex: 'U+2247',
          ascii: '8775',
        },
      },
      {
        name: 'Neither Approximately Nor Actually Equal To',
        keywords: [],
        formats: {
          html: '&#8775;',
          entity: '',
          css: '\\2247',
          hex: 'U+2247',
          ascii: '8775',
        },
      },
      {
        name: 'Almost Equal To',
        keywords: ['asymptotic to'],
        formats: {
          html: '&#8776;',
          entity: '&asymp;',
          css: '\\2248',
          hex: 'U+2248',
          ascii: '8776',
        },
      },
      {
        name: 'Not Almost Equal To',
        keywords: [''],
        formats: {
          html: '&#8777;',
          entity: '',
          css: '\\2249',
          hex: 'U+2249',
          ascii: '8777',
        },
      },
      {
        name: 'Almost Equal Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8778;',
          entity: '',
          css: '\\224A',
          hex: 'U+224A',
          ascii: '8778',
        },
      },
      {
        name: 'Triple Tilde',
        keywords: [''],
        formats: {
          html: '&#8779;',
          entity: '',
          css: '\\224B',
          hex: 'U+224B',
          ascii: '8779',
        },
      },
      {
        name: 'All Equal To',
        keywords: [''],
        formats: {
          html: '&#8780;',
          entity: '',
          css: '\\224C',
          hex: 'U+224C',
          ascii: '8780',
        },
      },
      {
        name: 'Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8781;',
          entity: '',
          css: '\\224D',
          hex: 'U+224D',
          ascii: '8781',
        },
      },
      {
        name: 'Geometrically Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8782;',
          entity: '',
          css: '\\224E',
          hex: 'U+224E',
          ascii: '8782',
        },
      },
      {
        name: 'Difference Between',
        keywords: [''],
        formats: {
          html: '&#8783;',
          entity: '',
          css: '\\224F',
          hex: 'U+224F',
          ascii: '8783',
        },
      },
      {
        name: 'Approaches The Limit',
        keywords: [''],
        formats: {
          html: '&#8784;',
          entity: '',
          css: '\\2250',
          hex: 'U+2250',
          ascii: '8784',
        },
      },
      {
        name: 'Geometrically Equal To',
        keywords: ['dots'],
        formats: {
          html: '&#8785;',
          entity: '',
          css: '\\2251',
          hex: 'U+2251',
          ascii: '8785',
        },
      },
      {
        name: 'Approximately Equal To Or The Image Of',
        keywords: ['nearly equals'],
        formats: {
          html: '&#8786;',
          entity: '',
          css: '\\2252',
          hex: 'U+2252',
          ascii: '8786',
        },
      },
      {
        name: 'Image Of Or Approximately Equal To',
        keywords: [''],
        formats: {
          html: '&#8787;',
          entity: '',
          css: '\\2253',
          hex: 'U+2253',
          ascii: '8787',
        },
      },
      {
        name: 'Colon Equals',
        keywords: ['checklist'],
        formats: {
          html: '&#8788;',
          entity: '',
          css: '\\2254',
          hex: 'U+2254',
          ascii: '8788',
        },
      },
      {
        name: 'Equals Colon',
        keywords: [''],
        formats: {
          html: '&#8789;',
          entity: '',
          css: '\\2255',
          hex: 'U+2255',
          ascii: '8789',
        },
      },
      {
        name: 'Ring In Equal To',
        keywords: [''],
        formats: {
          html: '&#8790;',
          entity: '',
          css: '\\2256',
          hex: 'U+2256',
          ascii: '8790',
        },
      },
      {
        name: 'Ring Equal To',
        keywords: ['approximately equal to'],
        formats: {
          html: '&#8791;',
          entity: '',
          css: '\\2257',
          hex: 'U+2257',
          ascii: '8791',
        },
      },
      {
        name: 'Corresponds To',
        keywords: ['hamburger'],
        formats: {
          html: '&#8792;',
          entity: '',
          css: '\\2258',
          hex: 'U+2258',
          ascii: '8792',
        },
      },
      {
        name: 'Estimates',
        keywords: ['corresponds to'],
        formats: {
          html: '&#8793;',
          entity: '',
          css: '\\2259',
          hex: 'U+2259',
          ascii: '8793',
        },
      },
      {
        name: 'Equiangular To',
        keywords: [''],
        formats: {
          html: '&#8794;',
          entity: '',
          css: '\\225A',
          hex: 'U+225A',
          ascii: '8794',
        },
      },
      {
        name: 'Star Equals',
        keywords: [''],
        formats: {
          html: '&#8795;',
          entity: '',
          css: '\\225B',
          hex: 'U+225B',
          ascii: '8795',
        },
      },
      {
        name: 'Delta Equal To',
        keywords: ['triangle', 'equiangular', 'equal to by definition'],
        formats: {
          html: '&#8796;',
          entity: '',
          css: '\\225C',
          hex: 'U+225C',
          ascii: '8796',
        },
      },
      {
        name: 'Equal To By Definition',
        keywords: [''],
        formats: {
          html: '&#8797;',
          entity: '',
          css: '\\225D',
          hex: 'U+225D',
          ascii: '8797',
        },
      },
      {
        name: 'Measured By',
        keywords: [''],
        formats: {
          html: '&#8798;',
          entity: '',
          css: '\\225E',
          hex: 'U+225E',
          ascii: '8798',
        },
      },
      {
        name: 'Questioned Equal To',
        keywords: [''],
        formats: {
          html: '&#8799;',
          entity: '',
          css: '\\225F',
          hex: 'U+225F',
          ascii: '8799',
        },
      },
      {
        name: 'Not Equal To',
        keywords: ['equals sign', 'alveolar click'],
        formats: {
          html: '&#8800;',
          entity: '&ne;',
          css: '\\2260',
          hex: 'U+2260',
          ascii: '8800',
        },
      },
      {
        name: 'Identical To',
        keywords: ['menu', 'hamburger', 'lines'],
        formats: {
          html: '&#8801;',
          entity: '&equiv;',
          css: '\\2261',
          hex: 'U+2261',
          ascii: '8801',
        },
      },
      {
        name: 'Not Identical To',
        keywords: [''],
        formats: {
          html: '&#8802;',
          entity: '',
          css: '\\2262',
          hex: 'U+2262',
          ascii: '8802',
        },
      },
      {
        name: 'Strictly Equivalent To',
        keywords: ['menu', 'lines'],
        formats: {
          html: '&#8803;',
          entity: '',
          css: '\\2263',
          hex: 'U+2263',
          ascii: '8803',
        },
      },
      {
        name: 'Less-Than Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8804;',
          entity: '&le;',
          css: '\\2264',
          hex: 'U+2264',
          ascii: '8804',
        },
      },
      {
        name: 'Greater-Than Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8805;',
          entity: '&ge;',
          css: '\\2265',
          hex: 'U+2265',
          ascii: '8805',
        },
      },
      {
        name: 'Less-Than Over Equal To',
        keywords: [''],
        formats: {
          html: '&#8806;',
          entity: '',
          css: '\\2266',
          hex: 'U+2266',
          ascii: '8806',
        },
      },
      {
        name: 'Greater-Than Over Equal To',
        keywords: [''],
        formats: {
          html: '&#8807;',
          entity: '',
          css: '\\2267',
          hex: 'U+2267',
          ascii: '8807',
        },
      },
      {
        name: 'Less-Than But Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8808;',
          entity: '',
          css: '\\2268',
          hex: 'U+2268',
          ascii: '8808',
        },
      },
      {
        name: 'Greater-Than But Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8809;',
          entity: '',
          css: '\\2269',
          hex: 'U+2269',
          ascii: '8809',
        },
      },
      {
        name: 'Much Less-Than',
        keywords: ['left-pointing double angle quotation mark'],
        formats: {
          html: '&#8810;',
          entity: '',
          css: '\\226A',
          hex: 'U+226A',
          ascii: '8810',
        },
      },
      {
        name: 'Much Greater-Than',
        keywords: ['right-pointing double angle quotation mark'],
        formats: {
          html: '&#8811;',
          entity: '',
          css: '\\226B',
          hex: 'U+226B',
          ascii: '8811',
        },
      },
      {
        name: 'Between',
        keywords: ['plaintiff', 'quantic'],
        formats: {
          html: '&#8812;',
          entity: '',
          css: '\\226C',
          hex: 'U+226C',
          ascii: '8812',
        },
      },
      {
        name: 'Not Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8813;',
          entity: '',
          css: '\\226D',
          hex: 'U+226D',
          ascii: '8813',
        },
      },
      {
        name: 'Not Less-Than',
        keywords: [''],
        formats: {
          html: '&#8814;',
          entity: '',
          css: '\\226E',
          hex: 'U+226E',
          ascii: '8814',
        },
      },
      {
        name: 'Not Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8815;',
          entity: '',
          css: '\\226F',
          hex: 'U+226F',
          ascii: '8815',
        },
      },
      {
        name: 'Neither Less-Than Nor Equal To',
        keywords: [''],
        formats: {
          html: '&#8816;',
          entity: '',
          css: '\\2270',
          hex: 'U+2270',
          ascii: '8816',
        },
      },
      {
        name: 'Neither Greater-Than Nor Equal To',
        keywords: [''],
        formats: {
          html: '&#8817;',
          entity: '',
          css: '\\2271',
          hex: 'U+2271',
          ascii: '8817',
        },
      },
      {
        name: 'Less-Than Or Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8818;',
          entity: '',
          css: '\\2272',
          hex: 'U+2272',
          ascii: '8818',
        },
      },
      {
        name: 'Greater-Than Or Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8819;',
          entity: '',
          css: '\\2273',
          hex: 'U+2273',
          ascii: '8819',
        },
      },
      {
        name: 'Neither Less-Than Nor Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8820;',
          entity: '',
          css: '\\2274',
          hex: 'U+2274',
          ascii: '8820',
        },
      },
      {
        name: 'Neither Greater-Than Nor Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8821;',
          entity: '',
          css: '\\2275',
          hex: 'U+2275',
          ascii: '8821',
        },
      },
      {
        name: 'Less-Than Or Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8822;',
          entity: '',
          css: '\\2276',
          hex: 'U+2276',
          ascii: '8822',
        },
      },
      {
        name: 'Greater-Than Or Less-Than',
        keywords: [''],
        formats: {
          html: '&#8823;',
          entity: '',
          css: '\\2277',
          hex: 'U+2277',
          ascii: '8823',
        },
      },
      {
        name: 'Neither Less-Than Nor Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8824;',
          entity: '',
          css: '\\2278',
          hex: 'U+2278',
          ascii: '8824',
        },
      },
      {
        name: 'Neither Greater-Than Nor Less-Than',
        keywords: [''],
        formats: {
          html: '&#8825;',
          entity: '',
          css: '\\2279',
          hex: 'U+2279',
          ascii: '8825',
        },
      },
      {
        name: 'Precedes',
        keywords: ['lower rank than'],
        formats: {
          html: '&#8826;',
          entity: '',
          css: '\\227A',
          hex: 'U+227A',
          ascii: '8826',
        },
      },
      {
        name: 'Succeeds',
        keywords: ['higher rank than'],
        formats: {
          html: '&#8827;',
          entity: '',
          css: '\\227B',
          hex: 'U+227B',
          ascii: '8827',
        },
      },
      {
        name: 'Preceeds Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8828;',
          entity: '',
          css: '\\227C',
          hex: 'U+227C',
          ascii: '8828',
        },
      },
      {
        name: 'Succeeds Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8829;',
          entity: '',
          css: '\\227D',
          hex: 'U+227D',
          ascii: '8829',
        },
      },
      {
        name: 'Precedes Or Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8830;',
          entity: '',
          css: '\\227E',
          hex: 'U+227E',
          ascii: '8830',
        },
      },
      {
        name: 'Succeeds Or Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8831;',
          entity: '',
          css: '\\227F',
          hex: 'U+227F',
          ascii: '8831',
        },
      },
      {
        name: 'Does Not Precede',
        keywords: [''],
        formats: {
          html: '&#8832;',
          entity: '',
          css: '\\2280',
          hex: 'U+2280',
          ascii: '8832',
        },
      },
      {
        name: 'Does Not Succeed',
        keywords: [''],
        formats: {
          html: '&#8833;',
          entity: '',
          css: '\\2281',
          hex: 'U+2281',
          ascii: '8833',
        },
      },
      {
        name: 'Subset Of',
        keywords: ['included in set', 'left sideways U bracket'],
        formats: {
          html: '&#8834;',
          entity: '&sub;',
          css: '\\2282',
          hex: 'U+2282',
          ascii: '8834',
        },
      },
      {
        name: 'Superset Of',
        keywords: ['includes in set', 'right sideways U bracket'],
        formats: {
          html: '&#8835;',
          entity: '&sup;',
          css: '\\2283',
          hex: 'U+2283',
          ascii: '8835',
        },
      },
      {
        name: 'Not A Subset Of',
        keywords: [''],
        formats: {
          html: '&#8836;',
          entity: '&nsub;',
          css: '\\2284',
          hex: 'U+2284',
          ascii: '8836',
        },
      },
      {
        name: 'Not A Superset Of',
        keywords: [''],
        formats: {
          html: '&#8837;',
          entity: '',
          css: '\\2285',
          hex: 'U+2285',
          ascii: '8837',
        },
      },
      {
        name: 'Subset Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8838;',
          entity: '&sube;',
          css: '\\2286',
          hex: 'U+2286',
          ascii: '8838',
        },
      },
      {
        name: 'Superset Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8839;',
          entity: '&supe;',
          css: '\\2287',
          hex: 'U+2287',
          ascii: '8839',
        },
      },
      {
        name: 'Neither A Subset Of Nor Equal To',
        keywords: [''],
        formats: {
          html: '&#8840;',
          entity: '',
          css: '\\2288',
          hex: 'U+2288',
          ascii: '8840',
        },
      },
      {
        name: 'Neither A Superset Of Nor Equal To',
        keywords: [''],
        formats: {
          html: '&#8841;',
          entity: '',
          css: '\\2289',
          hex: 'U+2289',
          ascii: '8841',
        },
      },
      {
        name: 'Subset Of With Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8842;',
          entity: '',
          css: '\\228A',
          hex: 'U+228A',
          ascii: '8842',
        },
      },
      {
        name: 'Superset Of With Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8843;',
          entity: '',
          css: '\\228B',
          hex: 'U+228B',
          ascii: '8843',
        },
      },
      {
        name: 'Multiset',
        keywords: ['U', 'left', 'arrow'],
        formats: {
          html: '&#8844;',
          entity: '',
          css: '\\228C',
          hex: 'U+228C',
          ascii: '8844',
        },
      },
      {
        name: 'Multiset Multiplication',
        keywords: ['n-ary union operator with dot', 'intersection with dot'],
        formats: {
          html: '&#8845;',
          entity: '',
          css: '\\228D',
          hex: 'U+228D',
          ascii: '8845',
        },
      },
      {
        name: 'Multiset Union',
        keywords: ['z notation bag addition', 'n-ary union operator with plus'],
        formats: {
          html: '&#8846;',
          entity: '',
          css: '\\228E',
          hex: 'U+228E',
          ascii: '8846',
        },
      },
      {
        name: 'Square Image Of',
        keywords: [''],
        formats: {
          html: '&#8847;',
          entity: '',
          css: '\\228F',
          hex: 'U+228F',
          ascii: '8847',
        },
      },
      {
        name: 'Square Original Of',
        keywords: [''],
        formats: {
          html: '&#8848;',
          entity: '',
          css: '\\2290',
          hex: 'U+2290',
          ascii: '8848',
        },
      },
      {
        name: 'Square Image Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8849;',
          entity: '',
          css: '\\2291',
          hex: 'U+2291',
          ascii: '8849',
        },
      },
      {
        name: 'Square Original Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8850;',
          entity: '',
          css: '\\2292',
          hex: 'U+2292',
          ascii: '8850',
        },
      },
      {
        name: 'Square Cap',
        keywords: ['n-ary square intersection operator'],
        formats: {
          html: '&#8851;',
          entity: '',
          css: '\\2293',
          hex: 'U+2293',
          ascii: '8851',
        },
      },
      {
        name: 'Square Cup',
        keywords: ['n-ary square union operator'],
        formats: {
          html: '&#8852;',
          entity: '',
          css: '\\2294',
          hex: 'U+2294',
          ascii: '8852',
        },
      },
      {
        name: 'Circled Plus',
        keywords: ['add', 'direct sum', 'vector pointing into page'],
        formats: {
          html: '&#8853;',
          entity: '&oplus;',
          css: '\\2295',
          hex: 'U+2295',
          ascii: '8853',
        },
      },
      {
        name: 'Circled Minus',
        keywords: [
          'remove',
          'subtract',
          'delete',
          'symmetric difference',
          'salt',
          'circle with horizontal bar',
        ],
        formats: {
          html: '&#8854;',
          entity: '',
          css: '\\2296',
          hex: 'U+2296',
          ascii: '8854',
        },
      },
      {
        name: 'Circled Times',
        keywords: [
          'tensor product',
          'vector pointing into page',
          'close',
          'cancel',
          'crossing lanes',
          'circled x',
        ],
        formats: {
          html: '&#8855;',
          entity: '&otimes;',
          css: '\\2297',
          hex: 'U+2297',
          ascii: '8855',
        },
      },
      {
        name: 'Circled Division Slash',
        keywords: ['cancel', 'stop', 'no'],
        formats: {
          html: '&#8856;',
          entity: '',
          css: '\\2298',
          hex: 'U+2298',
          ascii: '8856',
        },
      },
      {
        name: 'Circled Dot Operator',
        keywords: [
          'direct product',
          'vector pointing out of page',
          'bilabial click',
          'sun',
          'n-ary circled dot operator',
        ],
        formats: {
          html: '&#8857;',
          entity: '',
          css: '\\2299',
          hex: 'U+2299',
          ascii: '8857',
        },
      },
      {
        name: 'Circled Ring Operator',
        keywords: ['target', 'apl functional symbol circle jot', 'bullseye'],
        formats: {
          html: '&#8858;',
          entity: '',
          css: '\\229A',
          hex: 'U+229A',
          ascii: '8858',
        },
      },
      {
        name: 'Circled Asterisk Operator',
        keywords: ['apl functional symbol circle star'],
        formats: {
          html: '&#8859;',
          entity: '',
          css: '\\229B',
          hex: 'U+229B',
          ascii: '8859',
        },
      },
      {
        name: 'Circled Equals',
        keywords: [''],
        formats: {
          html: '&#8860;',
          entity: '',
          css: '\\229C',
          hex: 'U+229C',
          ascii: '8860',
        },
      },
      {
        name: 'Circled Dash',
        keywords: [''],
        formats: {
          html: '&#8861;',
          entity: '',
          css: '\\229D',
          hex: 'U+229D',
          ascii: '8861',
        },
      },
      {
        name: 'Squared Plus',
        keywords: ['grid', 'spreadsheet', 'crosshair', 'window'],
        formats: {
          html: '&#8862;',
          entity: '',
          css: '\\229E',
          hex: 'U+229E',
          ascii: '8862',
        },
      },
      {
        name: 'Squared Minus',
        keywords: ['rows'],
        formats: {
          html: '&#8863;',
          entity: '',
          css: '\\229F',
          hex: 'U+229F',
          ascii: '8863',
        },
      },
      {
        name: 'Squared Times',
        keywords: [
          'x',
          'close',
          'cancel',
          'ballot box with x',
          'squared saltire',
          'ticked box',
          'checked',
          'month',
        ],
        formats: {
          html: '&#8864;',
          entity: '',
          css: '\\22A0',
          hex: 'U+22A0',
          ascii: '8864',
        },
      },
      {
        name: 'Squared Dot Operator',
        keywords: ['urine'],
        formats: {
          html: '&#8865;',
          entity: '',
          css: '\\22A1',
          hex: 'U+22A1',
          ascii: '8865',
        },
      },
      {
        name: 'Right Tack',
        keywords: ['turnstile', 'proves', 'implies', 'yields', 'reducible'],
        formats: {
          html: '&#8866;',
          entity: '',
          css: '\\22A2',
          hex: 'U+22A2',
          ascii: '8866',
        },
      },
      {
        name: 'Left Tack',
        keywords: ['reverse turnstile', 'non-theorem', 'does not yield'],
        formats: {
          html: '&#8867;',
          entity: '',
          css: '\\22A3',
          hex: 'U+22A3',
          ascii: '8867',
        },
      },
      {
        name: 'Down Tack',
        keywords: ['top', 't', 'raised interpolation market', 'crucible'],
        formats: {
          html: '&#8868;',
          entity: '',
          css: '\\22A4',
          hex: 'U+22A4',
          ascii: '8868',
        },
      },
      {
        name: 'Up Tack',
        keywords: ['base', 'bottom', 'perpendicular'],
        formats: {
          html: '&#8869;',
          entity: '&perp;',
          css: '\\22A5',
          hex: 'U+22A5',
          ascii: '8869',
        },
      },
      {
        name: 'Assertion',
        keywords: ['reduces to'],
        formats: {
          html: '&#8870;',
          entity: '',
          css: '\\22A6',
          hex: 'U+22A6',
          ascii: '8870',
        },
      },
      {
        name: 'Models',
        keywords: [''],
        formats: {
          html: '&#8871;',
          entity: '',
          css: '\\22A7',
          hex: 'U+22A7',
          ascii: '8871',
        },
      },
      {
        name: 'True',
        keywords: [
          'statement is true',
          'valid',
          'is a tautology',
          'satisfies',
          'results in',
        ],
        formats: {
          html: '&#8872;',
          entity: '',
          css: '\\22A8',
          hex: 'U+22A8',
          ascii: '8872',
        },
      },
      {
        name: 'Forces',
        keywords: [''],
        formats: {
          html: '&#8873;',
          entity: '',
          css: '\\22A9',
          hex: 'U+22A9',
          ascii: '8873',
        },
      },
      {
        name: 'Triple Vertical Bar Right Turnstile',
        keywords: [''],
        formats: {
          html: '&#8874;',
          entity: '',
          css: '\\22AA',
          hex: 'U+22AA',
          ascii: '8874',
        },
      },
      {
        name: 'Double Vertical Bar Double Right Turnstile',
        keywords: [''],
        formats: {
          html: '&#8875;',
          entity: '',
          css: '\\22AB',
          hex: 'U+22AB',
          ascii: '8875',
        },
      },
      {
        name: 'Does Not Prove',
        keywords: [''],
        formats: {
          html: '&#8876;',
          entity: '',
          css: '\\22AC',
          hex: 'U+22AC',
          ascii: '8876',
        },
      },
      {
        name: 'Not True',
        keywords: [''],
        formats: {
          html: '&#8877;',
          entity: '',
          css: '\\22AD',
          hex: 'U+22AD',
          ascii: '8877',
        },
      },
      {
        name: 'Does Not Force',
        keywords: [''],
        formats: {
          html: '&#8878;',
          entity: '',
          css: '\\22AE',
          hex: 'U+22AE',
          ascii: '8878',
        },
      },
      {
        name: 'Negated Double Vertical Bar Double Right Turnstile',
        keywords: [''],
        formats: {
          html: '&#8879;',
          entity: '',
          css: '\\22AF',
          hex: 'U+22AF',
          ascii: '8879',
        },
      },
      {
        name: 'Precedes Under Relation',
        keywords: [''],
        formats: {
          html: '&#8880;',
          entity: '',
          css: '\\22B0',
          hex: 'U+22B0',
          ascii: '8880',
        },
      },
      {
        name: 'Succeeds Under Relation',
        keywords: [''],
        formats: {
          html: '&#8881;',
          entity: '',
          css: '\\22B1',
          hex: 'U+22B1',
          ascii: '8881',
        },
      },
      {
        name: 'Normal Subgroup Of',
        keywords: ['white left pointing pointer', 'triangle'],
        formats: {
          html: '&#8882;',
          entity: '',
          css: '\\22B2',
          hex: 'U+22B2',
          ascii: '8882',
        },
      },
      {
        name: 'Contains As Normal Subgroup',
        keywords: ['white right pointing pointer', 'triangle'],
        formats: {
          html: '&#8883;',
          entity: '',
          css: '\\22B3',
          hex: 'U+22B3',
          ascii: '8883',
        },
      },
      {
        name: 'Normal Subgroup Of Or Equal To',
        keywords: ['triangle'],
        formats: {
          html: '&#8884;',
          entity: '',
          css: '\\22B4',
          hex: 'U+22B4',
          ascii: '8884',
        },
      },
      {
        name: 'Contains As Normal Subgroup Or Equal To',
        keywords: ['triangle'],
        formats: {
          html: '&#8885;',
          entity: '',
          css: '\\22B5',
          hex: 'U+22B5',
          ascii: '8885',
        },
      },
      {
        name: 'Original Of',
        keywords: [''],
        formats: {
          html: '&#8886;',
          entity: '',
          css: '\\22B6',
          hex: 'U+22B6',
          ascii: '8886',
        },
      },
      {
        name: 'Image Of',
        keywords: [''],
        formats: {
          html: '&#8887;',
          entity: '',
          css: '\\22B7',
          hex: 'U+22B7',
          ascii: '8887',
        },
      },
      {
        name: 'Multimap',
        keywords: [''],
        formats: {
          html: '&#8888;',
          entity: '',
          css: '\\22B8',
          hex: 'U+22B8',
          ascii: '8888',
        },
      },
      {
        name: 'Hermitian Conjugate Matrix',
        keywords: ['spark', 'sparkle', 'crosshair'],
        formats: {
          html: '&#8889;',
          entity: '',
          css: '\\22B9',
          hex: 'U+22B9',
          ascii: '8889',
        },
      },
      {
        name: 'Intercalate',
        keywords: [''],
        formats: {
          html: '&#8890;',
          entity: '',
          css: '\\22BA',
          hex: 'U+22BA',
          ascii: '8890',
        },
      },
      {
        name: 'Xor',
        keywords: ['Semisextile'],
        formats: {
          html: '&#8891;',
          entity: '',
          css: '\\22BB',
          hex: 'U+22BB',
          ascii: '8891',
        },
      },
      {
        name: 'Nand',
        keywords: ['projective', 'quincunx'],
        formats: {
          html: '&#8892;',
          entity: '',
          css: '\\22BC',
          hex: 'U+22BC',
          ascii: '8892',
        },
      },
      {
        name: 'Nor',
        keywords: [''],
        formats: {
          html: '&#8893;',
          entity: '',
          css: '\\22BD',
          hex: 'U+22BD',
          ascii: '8893',
        },
      },
      {
        name: 'Right Angle With Arc',
        keywords: [''],
        formats: {
          html: '&#8894;',
          entity: '',
          css: '\\22BE',
          hex: 'U+22BE',
          ascii: '8894',
        },
      },
      {
        name: 'Right Triangle',
        keywords: [''],
        formats: {
          html: '&#8895;',
          entity: '',
          css: '\\22BF',
          hex: 'U+22BF',
          ascii: '8895',
        },
      },
      {
        name: 'N-Ary Logical And',
        keywords: ['universal quantifier', 'upside down v'],
        formats: {
          html: '&#8896;',
          entity: '',
          css: '\\22C0',
          hex: 'U+22C0',
          ascii: '8896',
        },
      },
      {
        name: 'N-Ary Logical Or',
        keywords: ['existential quantifier', 'v'],
        formats: {
          html: '&#8897;',
          entity: '',
          css: '\\22C1',
          hex: 'U+22C1',
          ascii: '8897',
        },
      },
      {
        name: 'N-Ary Intersection',
        keywords: ['z notation generalized intersection', 'upside down u'],
        formats: {
          html: '&#8898;',
          entity: '',
          css: '\\22C2',
          hex: 'U+22C2',
          ascii: '8898',
        },
      },
      {
        name: 'N-Ary Union',
        keywords: ['z notation generalized union'],
        formats: {
          html: '&#8899;',
          entity: '',
          css: '\\22C3',
          hex: 'U+22C3',
          ascii: '8899',
        },
      },
      {
        name: 'Diamond Operator',
        keywords: [''],
        formats: {
          html: '&#8900;',
          entity: '',
          css: '\\22C4',
          hex: 'U+22C4',
          ascii: '8900',
        },
      },
      {
        name: 'Dot Operator',
        keywords: ['middle', 'bullet'],
        formats: {
          html: '&#8901;',
          entity: '&sdot;',
          css: '\\22C5',
          hex: 'U+22C5',
          ascii: '8901',
        },
      },
      {
        name: 'Star Operator',
        keywords: ['favorite'],
        formats: {
          html: '&#8902;',
          entity: '',
          css: '\\22C6',
          hex: 'U+22C6',
          ascii: '8902',
        },
      },
      {
        name: 'Division Times',
        keywords: [''],
        formats: {
          html: '&#8903;',
          entity: '',
          css: '\\22C7',
          hex: 'U+22C7',
          ascii: '8903',
        },
      },
      {
        name: 'Bowtie',
        keywords: ['ocr'],
        formats: {
          html: '&#8904;',
          entity: '',
          css: '\\22C8',
          hex: 'U+22C8',
          ascii: '8904',
        },
      },
      {
        name: 'Left Normal Factor Semidirect Product',
        keywords: [''],
        formats: {
          html: '&#8905;',
          entity: '',
          css: '\\22C9',
          hex: 'U+22C9',
          ascii: '8905',
        },
      },
      {
        name: 'Right Normal Factor Semidirect Product',
        keywords: [''],
        formats: {
          html: '&#8906;',
          entity: '',
          css: '\\22CA',
          hex: 'U+22CA',
          ascii: '8906',
        },
      },
      {
        name: 'Left Semidirect Product',
        keywords: [''],
        formats: {
          html: '&#8907;',
          entity: '',
          css: '\\22CB',
          hex: 'U+22CB',
          ascii: '8907',
        },
      },
      {
        name: 'Right Semidirect Product',
        keywords: [''],
        formats: {
          html: '&#8908;',
          entity: '',
          css: '\\22CC',
          hex: 'U+22CC',
          ascii: '8908',
        },
      },
      {
        name: 'Right Tilde Equals',
        keywords: [''],
        formats: {
          html: '&#8909;',
          entity: '',
          css: '\\22CD',
          hex: 'U+22CD',
          ascii: '8909',
        },
      },
      {
        name: 'Curly Logical Or',
        keywords: [''],
        formats: {
          html: '&#8910;',
          entity: '',
          css: '\\22CE',
          hex: 'U+22CE',
          ascii: '8910',
        },
      },
      {
        name: 'Curly Logical And',
        keywords: [''],
        formats: {
          html: '&#8911;',
          entity: '',
          css: '\\22CF',
          hex: 'U+22CF',
          ascii: '8911',
        },
      },
      {
        name: 'Double Subset',
        keywords: [''],
        formats: {
          html: '&#8912;',
          entity: '',
          css: '\\22D0',
          hex: 'U+22D0',
          ascii: '8912',
        },
      },
      {
        name: 'Double Superset',
        keywords: [''],
        formats: {
          html: '&#8913;',
          entity: '',
          css: '\\22D1',
          hex: 'U+22D1',
          ascii: '8913',
        },
      },
      {
        name: 'Double Intersection',
        keywords: ['rainbow'],
        formats: {
          html: '&#8914;',
          entity: '',
          css: '\\22D2',
          hex: 'U+22D2',
          ascii: '8914',
        },
      },
      {
        name: 'Double Union',
        keywords: [''],
        formats: {
          html: '&#8915;',
          entity: '',
          css: '\\22D3',
          hex: 'U+22D3',
          ascii: '8915',
        },
      },
      {
        name: 'Pitchfork',
        keywords: ['proper intersection'],
        formats: {
          html: '&#8916;',
          entity: '',
          css: '\\22D4',
          hex: 'U+22D4',
          ascii: '8916',
        },
      },
      {
        name: 'Equal And Parallel To',
        keywords: ['viewdata square'],
        formats: {
          html: '&#8917;',
          entity: '',
          css: '\\22D5',
          hex: 'U+22D5',
          ascii: '8917',
        },
      },
      {
        name: 'Less-Than With Dot',
        keywords: [''],
        formats: {
          html: '&#8918;',
          entity: '',
          css: '\\22D6',
          hex: 'U+22D6',
          ascii: '8918',
        },
      },
      {
        name: 'Greater-Than With Dot',
        keywords: [''],
        formats: {
          html: '&#8919;',
          entity: '',
          css: '\\22D7',
          hex: 'U+22D7',
          ascii: '8919',
        },
      },
      {
        name: 'Very Much Less-Than',
        keywords: [''],
        formats: {
          html: '&#8920;',
          entity: '',
          css: '\\22D8',
          hex: 'U+22D8',
          ascii: '8920',
        },
      },
      {
        name: 'Very Much Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8921;',
          entity: '',
          css: '\\22D9',
          hex: 'U+22D9',
          ascii: '8921',
        },
      },
      {
        name: 'Less-Than Equal To Or Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8922;',
          entity: '',
          css: '\\22DA',
          hex: 'U+22DA',
          ascii: '8922',
        },
      },
      {
        name: 'Greater-Than Equal To Or Less-Than',
        keywords: [''],
        formats: {
          html: '&#8923;',
          entity: '',
          css: '\\22DB',
          hex: 'U+22DB',
          ascii: '8923',
        },
      },
      {
        name: 'Equal To Or Less-Than',
        keywords: [''],
        formats: {
          html: '&#8924;',
          entity: '',
          css: '\\22DC',
          hex: 'U+22DC',
          ascii: '8924',
        },
      },
      {
        name: 'Equal To Or Greater-Than',
        keywords: [''],
        formats: {
          html: '&#8925;',
          entity: '',
          css: '\\22DD',
          hex: 'U+22DD',
          ascii: '8925',
        },
      },
      {
        name: 'Equal To Or Precedes',
        keywords: [''],
        formats: {
          html: '&#8926;',
          entity: '',
          css: '\\22DE',
          hex: 'U+22DE',
          ascii: '8926',
        },
      },
      {
        name: 'Equal To Or Succeeds',
        keywords: [''],
        formats: {
          html: '&#8927;',
          entity: '',
          css: '\\22DF',
          hex: 'U+22DF',
          ascii: '8927',
        },
      },
      {
        name: 'Does Not Precede Or Equal',
        keywords: [''],
        formats: {
          html: '&#8928;',
          entity: '',
          css: '\\22E0',
          hex: 'U+22E0',
          ascii: '8928',
        },
      },
      {
        name: 'Does Not Succeed Or Equal',
        keywords: [''],
        formats: {
          html: '&#8929;',
          entity: '',
          css: '\\22E1',
          hex: 'U+22E1',
          ascii: '8929',
        },
      },
      {
        name: 'Not Square Image Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8930;',
          entity: '',
          css: '\\22E2',
          hex: 'U+22E2',
          ascii: '8930',
        },
      },
      {
        name: 'Not Square Original Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8931;',
          entity: '',
          css: '\\22E3',
          hex: 'U+22E3',
          ascii: '8931',
        },
      },
      {
        name: 'Square Image Of Or Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8932;',
          entity: '',
          css: '\\22E4',
          hex: 'U+22E4',
          ascii: '8932',
        },
      },
      {
        name: 'Square Original Of Or Not Equal To',
        keywords: [''],
        formats: {
          html: '&#8933;',
          entity: '',
          css: '\\22E5',
          hex: 'U+22E5',
          ascii: '8933',
        },
      },
      {
        name: 'Less-Than But Not Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8934;',
          entity: '',
          css: '\\22E6',
          hex: 'U+22E6',
          ascii: '8934',
        },
      },
      {
        name: 'Greater-Than But Not Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8935;',
          entity: '',
          css: '\\22E7',
          hex: 'U+22E7',
          ascii: '8935',
        },
      },
      {
        name: 'Precedes But Not Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8936;',
          entity: '',
          css: '\\22E8',
          hex: 'U+22E8',
          ascii: '8936',
        },
      },
      {
        name: 'Succeeds But Not Equivalent To',
        keywords: [''],
        formats: {
          html: '&#8937;',
          entity: '',
          css: '\\22E9',
          hex: 'U+22E9',
          ascii: '8937',
        },
      },
      {
        name: 'Not Normal Subgroup Of',
        keywords: [''],
        formats: {
          html: '&#8938;',
          entity: '',
          css: '\\22EA',
          hex: 'U+22EA',
          ascii: '8938',
        },
      },
      {
        name: 'Does Not Contain As Normal Subgroup',
        keywords: [''],
        formats: {
          html: '&#8939;',
          entity: '',
          css: '\\22EB',
          hex: 'U+22EB',
          ascii: '8939',
        },
      },
      {
        name: 'Not Normal Subgroup Of Or Equal To',
        keywords: [''],
        formats: {
          html: '&#8940;',
          entity: '',
          css: '\\22EC',
          hex: 'U+22EC',
          ascii: '8940',
        },
      },
      {
        name: 'Does Not Contain As Normal Subgroup Or Equal',
        keywords: [''],
        formats: {
          html: '&#8941;',
          entity: '',
          css: '\\22ED',
          hex: 'U+22ED',
          ascii: '8941',
        },
      },
      {
        name: 'Vertical Ellipsis',
        keywords: ['dots', 'tricolon', 'horizontal ellipsis'],
        formats: {
          html: '&#8942;',
          entity: '',
          css: '\\22EE',
          hex: 'U+22EE',
          ascii: '8942',
        },
      },
      {
        name: 'Midline Horizontal Ellipsis',
        keywords: ['dots'],
        formats: {
          html: '&#8943;',
          entity: '',
          css: '\\22EF',
          hex: 'U+22EF',
          ascii: '8943',
        },
      },
      {
        name: 'Up Right Diagonal Ellipsis',
        keywords: ['dots'],
        formats: {
          html: '&#8944;',
          entity: '',
          css: '\\22F0',
          hex: 'U+22F0',
          ascii: '8944',
        },
      },
      {
        name: 'Down Right Diagonal Ellipsis',
        keywords: ['dots'],
        formats: {
          html: '&#8945;',
          entity: '',
          css: '\\22F1',
          hex: 'U+22F1',
          ascii: '8945',
        },
      },
      {
        name: 'Element Of With Long Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8946;',
          entity: '',
          css: '\\22F2',
          hex: 'U+22F2',
          ascii: '8946',
        },
      },
      {
        name: 'Element Of With Vertical Bar At End Of Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8947;',
          entity: '',
          css: '\\22F3',
          hex: 'U+22F3',
          ascii: '8947',
        },
      },
      {
        name: 'Small Element Of With Vertical Bar At End Of Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8948;',
          entity: '',
          css: '\\22F4',
          hex: 'U+22F4',
          ascii: '8948',
        },
      },
      {
        name: 'Element Of With Dot Above',
        keywords: [''],
        formats: {
          html: '&#8949;',
          entity: '',
          css: '\\22F5',
          hex: 'U+22F5',
          ascii: '8949',
        },
      },
      {
        name: 'Element Of With Overbar',
        keywords: [''],
        formats: {
          html: '&#8950;',
          entity: '',
          css: '\\22F6',
          hex: 'U+22F6',
          ascii: '8950',
        },
      },
      {
        name: 'Small Element Of With Overbar',
        keywords: [''],
        formats: {
          html: '&#8951;',
          entity: '',
          css: '\\22F7',
          hex: 'U+22F7',
          ascii: '8951',
        },
      },
      {
        name: 'Element Of With Underbar',
        keywords: [''],
        formats: {
          html: '&#8952;',
          entity: '',
          css: '\\22F8',
          hex: 'U+22F8',
          ascii: '8952',
        },
      },
      {
        name: 'Element Of With Two Horizontal Strokes',
        keywords: [''],
        formats: {
          html: '&#8953;',
          entity: '',
          css: '\\22F9',
          hex: 'U+22F9',
          ascii: '8953',
        },
      },
      {
        name: 'Contains With Long Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8954;',
          entity: '',
          css: '\\22FA',
          hex: 'U+22FA',
          ascii: '8954',
        },
      },
      {
        name: 'Contains With Vertical Bar At End Of Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8955;',
          entity: '',
          css: '\\22FB',
          hex: 'U+22FB',
          ascii: '8955',
        },
      },
      {
        name: 'Small Contains With Vertical Bar At End Of Horizontal Stroke',
        keywords: [''],
        formats: {
          html: '&#8956;',
          entity: '',
          css: '\\22FC',
          hex: 'U+22FC',
          ascii: '8956',
        },
      },
      {
        name: 'Contains With Overbar',
        keywords: [''],
        formats: {
          html: '&#8957;',
          entity: '',
          css: '\\22FD',
          hex: 'U+22FD',
          ascii: '8957',
        },
      },
      {
        name: 'Small Contains With Overbar',
        keywords: [''],
        formats: {
          html: '&#8958;',
          entity: '',
          css: '\\22FE',
          hex: 'U+22FE',
          ascii: '8958',
        },
      },
      {
        name: 'Z Notation Bag Membership',
        keywords: [''],
        formats: {
          html: '&#8959;',
          entity: '',
          css: '\\22FF',
          hex: 'U+22FF',
          ascii: '8959',
        },
      },
      {
        name: 'Diameter Sign',
        keywords: ['empty set'],
        formats: {
          html: '&#8960;',
          entity: '',
          css: '\\2300',
          hex: 'U+2300',
          ascii: '8960',
        },
      },
    ],
  },
  {
    id: 'numbers',
    category: 'Numbers',
    icons: [],
  },
  {
    id: 'punctuation',
    category: 'Punctuation',
    icons: [
      {
        name: 'Exclamation Mark',
        keywords: ['point'],
        formats: { html: '&#33;', css: '\\0021', hex: 'U+0021', ascii: '0033' },
      },
      {
        name: 'Quotation Mark',
        keywords: [],
        formats: { html: '&#34;', css: '\\0022', hex: 'U+0022', ascii: '0034' },
      },
      {
        name: 'Number Sign',
        keywords: ['hash', 'pound'],
        formats: { html: '&#35;', css: '\\0023', hex: 'U+0023', ascii: '0035' },
      },
    ],
  },
];

export default symbols;
